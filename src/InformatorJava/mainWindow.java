/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InformatorJava;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class mainWindow extends javax.swing.JFrame {

    private final DefaultTableModel model;
    private Connection databaseConnection;
    private DetailedArticle detailedArticle;

    /**
     * Creates new form mainWindow
     */
    public mainWindow() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        if (!dbConnected()) {
            System.exit(0);
        }
        this.listData(this.getAllRecords());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        detailedViewBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vícejazyčný slovník");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "title", "content", "date", "published", "category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.PAGE_START);

        insert.setText("Nový");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setText("Změnit");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Smazat");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        detailedViewBtn.setText("Podrobně zobrazit vybraný článek");
        detailedViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedViewBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Ukončit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(insert)
                        .addGap(18, 18, 18)
                        .addComponent(update)
                        .addGap(18, 18, 18)
                        .addComponent(delete))
                    .addComponent(detailedViewBtn))
                .addContainerGap(519, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitBtn)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(update)
                    .addComponent(delete))
                .addGap(18, 18, 18)
                .addComponent(detailedViewBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(exitBtn)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        InsertArticle insertArticle = new InsertArticle(this, true);
        if (insertArticle.showDialog().equalsIgnoreCase("OK")) {
            java.util.Date date = new java.util.Date();
           Article article = new Article(insertArticle.getTitleString().getText(),insertArticle.getContentString().getText(),
                   new java.sql.Date(date.getTime()), (insertArticle.getIsPublished().isSelected()), insertArticle.getCategory().getSelectedItem().toString()
           );
           this.insertRecord(article.getTitle(), article.getContent(), article.getDate(), article.isPublished(), article.getCategory());
        }
        listData(this.getAllRecords());
    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        java.util.Date date = new java.util.Date();
        Article article = new Article(
                new Integer(table.getModel().getValueAt(table.getSelectedRow(), 0).toString()),
                table.getModel().getValueAt(table.getSelectedRow(), 1).toString(),
                table.getModel().getValueAt(table.getSelectedRow(), 2).toString(),
                new java.sql.Date(date.getTime()),
                ((table.getModel().getValueAt(table.getSelectedRow(), 4).toString())=="1"),
                table.getModel().getValueAt(table.getSelectedRow(), 5).toString()
        );
        InsertArticle insertArticle = new InsertArticle(this, true, article);
        if (insertArticle.showDialog().equalsIgnoreCase("OK")) {
            article.setTitle(insertArticle.getTitleString().getText());
            article.setContent(insertArticle.getContentString().getText());
            article.setPublished(insertArticle.getIsPublished().isSelected());
            article.setCategory(insertArticle.getCategory().getSelectedItem().toString());
            updateRecord(article);
        }
        listData(this.getAllRecords());
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int id = (int) table.getModel().getValueAt(table.getSelectedRow(), 0);
        deleteRecord(id);
        listData(this.getAllRecords());
    }//GEN-LAST:event_deleteActionPerformed

    private void detailedViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedViewBtnActionPerformed
        this.detailedArticle = new DetailedArticle(this, true);
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd-MM-yyyy");
        java.util.Date uDate = null;
        try {
            uDate = sdf1.parse(table.getModel().getValueAt(table.getSelectedRow(), 3).toString());
        } catch (ParseException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.sql.Date date = new java.sql.Date(uDate.getTime());
        detailedArticle.setStrings(new Article(
                table.getModel().getValueAt(table.getSelectedRow(), 1).toString(),
                table.getModel().getValueAt(table.getSelectedRow(), 2).toString(),
                date,
                ((table.getModel().getValueAt(table.getSelectedRow(), 4).toString())=="1"),
                table.getModel().getValueAt(table.getSelectedRow(), 5).toString()
        ));
        this.detailedArticle.showDialog();
    }//GEN-LAST:event_detailedViewBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainWindow().setVisible(true);
            }
        });
    }

    private boolean dbConnected() {
        try {
            databaseConnection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/informator?useUnicode=true&characterEncoding=utf-8", "informator", "informator");
            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Nepodařilo se připojit k databázi. Java hlásí chybu \"" + ex + "\"", "Chyba", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private ResultSet getAllRecords() {
        ResultSet results = null;
        try {
            PreparedStatement dotaz = databaseConnection.prepareStatement("SELECT * FROM news");
            results = dotaz.executeQuery();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Chyba při komunikaci s databází.", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
        return results;
    }

    private void listData(ResultSet data) {
        /* Odstranění všech řádků z tabulky */
        for (int i = table.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        try {
            /* Vložení řádků do tabulky a jejich naplnění daty ze získané dynamické sady */
            while (data.next()) {
                int id = data.getInt(1);
                String title = data.getString("title");
                String content = data.getString("content");
                Date date = data.getDate("date");
                boolean published = data.getBoolean("published");
                String category = data.getString("category");
                model.addRow(new Object[]{id, title, content, date, published, category});
            }
            /* Zapnutí nebo vypnutí tlačítek Změnit a Smazat v závislosti na existenci záznamů (řádků) v tabulce */
            if (table.getRowCount() > 0) {
                table.setRowSelectionInterval(0, 0);
                /* Označení prvního řádku tabulky */
                update.setEnabled(true);
                delete.setEnabled(true);
            } else {
                update.setEnabled(false);
                delete.setEnabled(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Chyba při komunikaci s databází",
                    "Chyba", JOptionPane.ERROR_MESSAGE);
        }
    }

    private int insertRecord(String title, String content, Date date, boolean published, String category) {
        int numRows = 0;
        try {
            PreparedStatement query
                    = databaseConnection.prepareStatement("INSERT INTO news (title, content, date, published, category) VALUES (?, ?, ?, ?, ?)");
            query.setString(1, title);
            query.setString(2, content);
            query.setString(3, date.toString());
            query.setString(4, (published)?"1":"0");
            query.setString(5, category);
            numRows = query.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Chyba při komunikaci s databází. Java hlásí: "+ex, "Chyba", JOptionPane.ERROR_MESSAGE);
        }
        return numRows;
    }

    private int updateRecord(Article article) {
        int numRows = 0;
        try {
            PreparedStatement query
                    = databaseConnection.prepareStatement("UPDATE news SET title=?, content=?, date=?, published=?, category=? WHERE id_news=?");
            query.setString(1, article.getTitle());
            query.setString(2, article.getContent());
            java.util.Date date = new java.util.Date();
            query.setDate(3, new java.sql.Date(date.getTime()));
            query.setInt(4, (article.isPublished())?1:0);
            query.setString(5, article.getCategory());
            query.setInt(6, article.getId());
            numRows = query.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Chyba při komunikaci s databází. Java hlásí: "+ex, "Chyba", JOptionPane.ERROR_MESSAGE);
        }
        return numRows;
    }

    private int deleteRecord(int id) {
        int numRows = 0;
        try {
            PreparedStatement query = databaseConnection.prepareStatement("DELETE FROM news WHERE id_news =  ?");
            query.setInt(1, id);
            numRows = query.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Chyba při komunikaci s databází. Java hlásí chybu: "+ex, "Chyba", JOptionPane.ERROR_MESSAGE);
        }
        return numRows;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton detailedViewBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton insert;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
